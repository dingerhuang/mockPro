<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mock.dao.ZhimaMapper">
  <resultMap id="BaseResultMap" type="com.mock.entity.Zhima">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="priority" jdbcType="INTEGER" property="priority" />
    <result column="errorCode" jdbcType="INTEGER" property="errorCode" />
    <result column="errorMsg" jdbcType="VARCHAR" property="errorMsg" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="result" jdbcType="VARCHAR" property="result" />
    <result column="authorized" jdbcType="VARCHAR" property="authorized" />
    <result column="timeout" jdbcType="INTEGER" property="timeout" />
    <result column="times" jdbcType="INTEGER" property="times" />
  </resultMap>
  <sql id="Base_Column_List">
    id, priority, errorCode, errorMsg, uid, result, authorized, timeout, times
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_mock_zhima_result
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getLatestResult" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_mock_zhima_result
    ORDER BY priority desc LIMIT 1
  </select>
  <select id="queryZhimaList" parameterType="com.mock.vo.ZhimaQueryVo" resultMap="BaseResultMap">
    select * from t_mock_zhima_result where 1=1
    <if test="priority !=null">
      	and priority=#{priority,jdbcType=INTEGER}
    </if>
    <if test="errorCode !=null">
      	and errorCode=#{errorCode,jdbcType=INTEGER}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_mock_zhima_result
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteBatchByIds" parameterType="list">
      delete from t_mock_zhima_result where id in
      <foreach item="idsItem" collection="list" open="(" separator="," close=")">
          #{idsItem}
      </foreach>
  </delete>
  <insert id="insert" parameterType="com.mock.entity.Zhima">
    insert into t_mock_zhima_result (id, priority, errorCode, 
      errorMsg, uid, result, 
      authorized, timeout, times
      )
    values (#{id,jdbcType=INTEGER}, #{priority,jdbcType=INTEGER}, #{errorCode,jdbcType=INTEGER}, 
      #{errorMsg,jdbcType=VARCHAR}, #{uid,jdbcType=VARCHAR}, #{result,jdbcType=VARCHAR}, 
      #{authorized,jdbcType=VARCHAR}, #{timeout,jdbcType=INTEGER}, #{times,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mock.entity.Zhima">
    insert into t_mock_zhima_result
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="priority != null">
        priority,
      </if>
      <if test="errorCode != null">
        errorCode,
      </if>
      <if test="errorMsg != null">
        errorMsg,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="authorized != null">
        authorized,
      </if>
      <if test="timeout != null">
        timeout,
      </if>
      <if test="times != null">
        times,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="priority != null">
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="errorCode != null">
        #{errorCode,jdbcType=INTEGER},
      </if>
      <if test="errorMsg != null">
        #{errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="authorized != null">
        #{authorized,jdbcType=VARCHAR},
      </if>
      <if test="timeout != null">
        #{timeout,jdbcType=INTEGER},
      </if>
      <if test="times != null">
        #{times,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mock.entity.Zhima">
    update t_mock_zhima_result
    <set>
      <if test="priority != null">
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="errorCode != null">
        errorCode = #{errorCode,jdbcType=INTEGER},
      </if>
      <if test="errorMsg != null">
        errorMsg = #{errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=VARCHAR},
      </if>
      <if test="authorized != null">
        authorized = #{authorized,jdbcType=VARCHAR},
      </if>
      <if test="timeout != null">
        timeout = #{timeout,jdbcType=INTEGER},
      </if>
      <if test="times != null">
        times = #{times,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mock.entity.Zhima">
    update t_mock_zhima_result
    set priority = #{priority,jdbcType=INTEGER},
      errorCode = #{errorCode,jdbcType=INTEGER},
      errorMsg = #{errorMsg,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=VARCHAR},
      result = #{result,jdbcType=VARCHAR},
      authorized = #{authorized,jdbcType=VARCHAR},
      timeout = #{timeout,jdbcType=INTEGER},
      times = #{times,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>